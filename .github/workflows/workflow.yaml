name: Book DB Flask build, test and upload to DockerHub

on: push

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r books_db/requirements.txt

      - name: Test with flake8
        run: |
          python -m flake8
          python -m pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: books_db/
          push: true
          no-cache: true
          tags: fibboo/books-db-flask:latest

  send_message_success:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} completed successfully!

  send_message_fail:
    runs-on: ubuntu-latest
    needs: [ tests, build_and_push_to_docker_hub ]
    if: always() && (needs.tests.result == 'failure' || needs.build_and_push_to_docker_hub.result == 'failure' || needs.deploy.result == 'failure')
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} completed with failure!
